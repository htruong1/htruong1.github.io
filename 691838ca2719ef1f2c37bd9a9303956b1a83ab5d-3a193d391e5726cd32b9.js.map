{"version":3,"file":"691838ca2719ef1f2c37bd9a9303956b1a83ab5d-3a193d391e5726cd32b9.js","mappings":"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","sources":["webpack://blackhole-eats/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://blackhole-eats/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://blackhole-eats/./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack://blackhole-eats/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://blackhole-eats/./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://blackhole-eats/./node_modules/react-intersection-observer/react-intersection-observer.modern.mjs","webpack://blackhole-eats/./src/components/Tabs/Tabs.js"],"sourcesContent":["function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import _slicedToArray from \"/home/htruong1/dev/henree/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"/home/htruong1/dev/henree/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/htruong1/dev/henree/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/htruong1/dev/henree/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _possibleConstructorReturn from \"/home/htruong1/dev/henree/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\";\nimport _getPrototypeOf from \"/home/htruong1/dev/henree/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar observerMap = new Map();\nvar RootIds = new WeakMap();\nvar rootId = 0;\nvar unsupportedValue = undefined;\n/**\r\n * What should be the default behavior if the IntersectionObserver is unsupported?\r\n * Ideally the polyfill has been loaded, you can have the following happen:\r\n * - `undefined`: Throw an error\r\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\r\n * **/\n\nfunction defaultFallbackInView(inView) {\n  unsupportedValue = inView;\n}\n/**\r\n * Generate a unique ID for the root element\r\n * @param root\r\n */\n\n\nfunction getRootId(root) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n/**\r\n * Convert the options to a string Id, based on the values.\r\n * Ensures we can reuse the same observer when observing elements with the same options.\r\n * @param options\r\n */\n\n\nfunction optionsToId(options) {\n  return Object.keys(options).sort().filter(function (key) {\n    return options[key] !== undefined;\n  }).map(function (key) {\n    return \"\".concat(key, \"_\").concat(key === 'root' ? getRootId(options.root) : options[key]);\n  }).toString();\n}\n\nfunction createObserver(options) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  var id = optionsToId(options);\n  var instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    var elements = new Map();\n    var thresholds;\n    var observer = new IntersectionObserver(function (entries) {\n      entries.forEach(function (entry) {\n        var _elements$get; // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n\n\n        var inView = entry.isIntersecting && thresholds.some(function (threshold) {\n          return entry.intersectionRatio >= threshold;\n        }); // @ts-ignore support IntersectionObserver v2\n\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        (_elements$get = elements.get(entry.target)) == null ? void 0 : _elements$get.forEach(function (callback) {\n          callback(inView, entry);\n        });\n      });\n    }, options); // Ensure we have a valid thresholds array. If not, use the threshold from the options\n\n    thresholds = observer.thresholds || (Array.isArray(options.threshold) ? options.threshold : [options.threshold || 0]);\n    instance = {\n      id: id,\n      observer: observer,\n      elements: elements\n    };\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n/**\r\n * @param element - DOM Element to observe\r\n * @param callback - Callback function to trigger when intersection status changes\r\n * @param options - Intersection Observer options\r\n * @param fallbackInView - Fallback inView value.\r\n * @return Function - Cleanup function that should be triggered to unregister the observer\r\n */\n\n\nfunction observe(element, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var fallbackInView = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : unsupportedValue;\n\n  if (typeof window.IntersectionObserver === 'undefined' && fallbackInView !== undefined) {\n    var bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio: typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds\n    });\n    return function () {// Nothing to cleanup\n    };\n  } // An observer with the same options can be reused, so lets use this fact\n\n\n  var _createObserver = createObserver(options),\n      id = _createObserver.id,\n      observer = _createObserver.observer,\n      elements = _createObserver.elements; // Register the callback listener for this element\n\n\n  var callbacks = elements.get(element) || [];\n\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n\nvar _excluded = [\"children\", \"as\", \"triggerOnce\", \"threshold\", \"root\", \"rootMargin\", \"onChange\", \"skip\", \"trackVisibility\", \"delay\", \"initialInView\", \"fallbackInView\"];\n\nfunction isPlainChildren(props) {\n  return typeof props.children !== 'function';\n}\n/**\r\n ## Render props\r\n\n To use the `<InView>` component, you pass it a function. It will be called\r\n whenever the state changes, with the new value of `inView`. In addition to the\r\n `inView` prop, children also receive a `ref` that should be set on the\r\n containing DOM element. This is the element that the IntersectionObserver will\r\n monitor.\r\n\n If you need it, you can also access the\r\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\r\n on `entry`, giving you access to all the details about the current intersection\r\n state.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView>\r\n {({ inView, ref, entry }) => (\r\n      <div ref={ref}>\r\n        <h2>{`Header inside viewport ${inView}.`}</h2>\r\n      </div>\r\n    )}\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n\n ## Plain children\r\n\n You can pass any element to the `<InView />`, and it will handle creating the\r\n wrapping DOM element. Add a handler to the `onChange` method, and control the\r\n state in your own component. Any extra props you add to `<InView>` will be\r\n passed to the HTML element, allowing you set the `className`, `style`, etc.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\r\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n */\n\n\nvar InView = /*#__PURE__*/function (_React$Component) {\n  _inherits(InView, _React$Component);\n\n  var _super = _createSuper(InView);\n\n  function InView(props) {\n    var _this;\n\n    _classCallCheck(this, InView);\n\n    _this = _super.call(this, props);\n    _this.node = null;\n    _this._unobserveCb = null;\n\n    _this.handleNode = function (node) {\n      if (_this.node) {\n        // Clear the old observer, before we start observing a new element\n        _this.unobserve();\n\n        if (!node && !_this.props.triggerOnce && !_this.props.skip) {\n          // Reset the state if we get a new node, and we aren't ignoring updates\n          _this.setState({\n            inView: !!_this.props.initialInView,\n            entry: undefined\n          });\n        }\n      }\n\n      _this.node = node ? node : null;\n\n      _this.observeNode();\n    };\n\n    _this.handleChange = function (inView, entry) {\n      if (inView && _this.props.triggerOnce) {\n        // If `triggerOnce` is true, we should stop observing the element.\n        _this.unobserve();\n      }\n\n      if (!isPlainChildren(_this.props)) {\n        // Store the current State, so we can pass it to the children in the next render update\n        // There's no reason to update the state for plain children, since it's not used in the rendering.\n        _this.setState({\n          inView: inView,\n          entry: entry\n        });\n      }\n\n      if (_this.props.onChange) {\n        // If the user is actively listening for onChange, always trigger it\n        _this.props.onChange(inView, entry);\n      }\n    };\n\n    _this.state = {\n      inView: !!props.initialInView,\n      entry: undefined\n    };\n    return _this;\n  }\n\n  _createClass(InView, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      // If a IntersectionObserver option changed, reinit the observer\n      if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold || prevProps.skip !== this.props.skip || prevProps.trackVisibility !== this.props.trackVisibility || prevProps.delay !== this.props.delay) {\n        this.unobserve();\n        this.observeNode();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unobserve();\n      this.node = null;\n    }\n  }, {\n    key: \"observeNode\",\n    value: function observeNode() {\n      if (!this.node || this.props.skip) return;\n      var _this$props2 = this.props,\n          threshold = _this$props2.threshold,\n          root = _this$props2.root,\n          rootMargin = _this$props2.rootMargin,\n          trackVisibility = _this$props2.trackVisibility,\n          delay = _this$props2.delay,\n          fallbackInView = _this$props2.fallbackInView;\n      this._unobserveCb = observe(this.node, this.handleChange, {\n        threshold: threshold,\n        root: root,\n        rootMargin: rootMargin,\n        // @ts-ignore\n        trackVisibility: trackVisibility,\n        // @ts-ignore\n        delay: delay\n      }, fallbackInView);\n    }\n  }, {\n    key: \"unobserve\",\n    value: function unobserve() {\n      if (this._unobserveCb) {\n        this._unobserveCb();\n\n        this._unobserveCb = null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!isPlainChildren(this.props)) {\n        var _this$state = this.state,\n            inView = _this$state.inView,\n            entry = _this$state.entry;\n        return this.props.children({\n          inView: inView,\n          entry: entry,\n          ref: this.handleNode\n        });\n      }\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          as = _this$props.as,\n          props = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n      return React.createElement(as || 'div', _extends({\n        ref: this.handleNode\n      }, props), children);\n    }\n  }]);\n\n  return InView;\n}(React.Component);\n/**\r\n * React Hooks make it easy to monitor the `inView` state of your components. Call\r\n * the `useInView` hook with the (optional) [options](#options) you need. It will\r\n * return an array containing a `ref`, the `inView` status and the current\r\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\r\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\r\n * report the status.\r\n *\r\n * @example\r\n * ```jsx\r\n * import React from 'react';\r\n * import { useInView } from 'react-intersection-observer';\r\n *\r\n * const Component = () => {\r\n *   const { ref, inView, entry } = useInView({\r\n *       threshold: 0,\r\n *   });\r\n *\r\n *   return (\r\n *     <div ref={ref}>\r\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\r\n *     </div>\r\n *   );\r\n * };\r\n * ```\r\n */\n\n\nfunction useInView() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      threshold = _ref.threshold,\n      delay = _ref.delay,\n      trackVisibility = _ref.trackVisibility,\n      rootMargin = _ref.rootMargin,\n      root = _ref.root,\n      triggerOnce = _ref.triggerOnce,\n      skip = _ref.skip,\n      initialInView = _ref.initialInView,\n      fallbackInView = _ref.fallbackInView,\n      onChange = _ref.onChange;\n\n  var _state$entry;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      ref = _React$useState2[0],\n      setRef = _React$useState2[1];\n\n  var callback = React.useRef();\n\n  var _React$useState3 = React.useState({\n    inView: !!initialInView,\n    entry: undefined\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      state = _React$useState4[0],\n      setState = _React$useState4[1]; // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n\n\n  callback.current = onChange;\n  React.useEffect(function () {\n    // Ensure we have node ref, and that we shouldn't skip observing\n    if (skip || !ref) return;\n    var unobserve = observe(ref, function (inView, entry) {\n      setState({\n        inView: inView,\n        entry: entry\n      });\n      if (callback.current) callback.current(inView, entry);\n\n      if (entry.isIntersecting && triggerOnce && unobserve) {\n        // If it should only trigger once, unobserve the element after it's inView\n        unobserve();\n        unobserve = undefined;\n      }\n    }, {\n      root: root,\n      rootMargin: rootMargin,\n      threshold: threshold,\n      // @ts-ignore\n      trackVisibility: trackVisibility,\n      // @ts-ignore\n      delay: delay\n    }, fallbackInView);\n    return function () {\n      if (unobserve) {\n        unobserve();\n      }\n    };\n  }, // We break the rule here, because we aren't including the actual `threshold` variable\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [// If the threshold is an array, convert it to a string, so it won't change between renders.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  Array.isArray(threshold) ? threshold.toString() : threshold, ref, root, rootMargin, triggerOnce, skip, trackVisibility, fallbackInView, delay]);\n  var entryTarget = (_state$entry = state.entry) == null ? void 0 : _state$entry.target;\n  React.useEffect(function () {\n    if (!ref && entryTarget && !triggerOnce && !skip) {\n      // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n      // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n      setState({\n        inView: !!initialInView,\n        entry: undefined\n      });\n    }\n  }, [ref, entryTarget, triggerOnce, skip, initialInView]);\n  var result = [setRef, state.inView, state.entry]; // Support object destructuring, by adding the specific values.\n\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n  return result;\n}\n\nexport { InView, defaultFallbackInView, observe, useInView };","import * as React from 'react';\r\nimport \"./Tabs.css\";\r\n\r\nconst buttonStyle = (selectedTabIndex, index) => {\r\n    const buttonColor = selectedTabIndex === index ? \"tabs-button\" : \"\";\r\n    return  `text-left text-lg p-1 pl-2 ${buttonColor}` \r\n}\r\n\r\nfunction TabsList({tabsContent, selectedTab, onClick}){\r\n    return (\r\n        <div className=\"pr-4 flex sm:flex-col\">\r\n            {tabsContent.map((content, index) => { \r\n                return (\r\n                    <button \r\n                        className={buttonStyle(selectedTab, index)} \r\n                        onClick={() => {onClick(index)}}>\r\n                        {content.name}\r\n                    </button>\r\n                    )\r\n                }\r\n            )\r\n            \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n/**\r\n * tabsContent: {\r\n *      name: string\r\n *      contents: string []\r\n * }\r\n */\r\nexport function Tabs({tabsContent}) {\r\n    const [selectedTab, setSelectedTab] = React.useState(0);\r\n    const workDateStr = tabsContent[selectedTab].endDate ? \r\n        `${tabsContent[selectedTab].startDate} to ${tabsContent[selectedTab].endDate}` :\r\n        `${tabsContent[selectedTab].startDate} to present`\r\n    return(\r\n        <div className=\"flex sm:flex-row flex-col w-full py-2\">\r\n            <TabsList \r\n                tabsContent={tabsContent}\r\n                onClick={(tabIndex) => setSelectedTab(tabIndex)}\r\n                selectedTab={selectedTab}\r\n            />\r\n            <div>\r\n                <h1 className=\"text-2xl font-medium\">\r\n                    {`${tabsContent[selectedTab].role} `}\r\n                    <span className=\"font-semibold\">\r\n                     {`@ ${tabsContent[selectedTab].name}`}\r\n                    </span>\r\n                </h1>\r\n                <div>\r\n                    {workDateStr}\r\n                </div>\r\n                <ul className=\"flex flex-col pl-4 pt-4\">\r\n                    {tabsContent[selectedTab].contents.map((content) => {\r\n                        return (\r\n                            <li className=\"list-disc text-left\">\r\n                                {content}\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"names":["_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_typeof","obj","Symbol","iterator","constructor","prototype","_possibleConstructorReturn","self","call","TypeError","ReferenceError","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","_isNativeReflectConstruct","result","Super","NewTarget","this","arguments","apply","_extends","assign","source","hasOwnProperty","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","undefined","optionsToId","options","keys","sort","filter","map","concat","root","has","set","toString","get","createObserver","id","instance","thresholds","elements","observer","IntersectionObserver","entries","forEach","entry","_elements$get","inView","isIntersecting","some","threshold","intersectionRatio","trackVisibility","isVisible","callback","Array","isArray","observe","element","fallbackInView","window","bounds","getBoundingClientRect","time","boundingClientRect","intersectionRect","rootBounds","_createObserver","callbacks","push","splice","indexOf","delete","unobserve","size","disconnect","_excluded","isPlainChildren","children","useInView","_state$entry","_ref","delay","rootMargin","triggerOnce","skip","initialInView","onChange","_React$useState","_React$useState2","ref","setRef","_React$useState3","_React$useState4","state","setState","current","entryTarget","buttonStyle","selectedTabIndex","index","TabsList","tabsContent","selectedTab","onClick","className","content","name","Tabs","React","setSelectedTab","workDateStr","endDate","startDate","tabIndex","role","contents"],"sourceRoot":""}