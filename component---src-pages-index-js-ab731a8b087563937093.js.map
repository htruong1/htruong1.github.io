{"version":3,"file":"component---src-pages-index-js-ab731a8b087563937093.js","mappings":"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","sources":["webpack://blackhole-eats/./src/components/Tabs/Tabs.js","webpack://blackhole-eats/./src/images/profile.png","webpack://blackhole-eats/./src/pages/about.js","webpack://blackhole-eats/./src/pages/blog.js","webpack://blackhole-eats/./src/pages/experience.js","webpack://blackhole-eats/./src/hooks/useIntersect.js","webpack://blackhole-eats/./node_modules/throttle-debounce/esm/index.js","webpack://blackhole-eats/./src/pages/index.js","webpack://blackhole-eats/./src/pages/landingpage.js"],"sourcesContent":["import * as React from 'react';\r\nimport \"./Tabs.css\";\r\n\r\nconst buttonStyle = (selectedTabIndex, index) => {\r\n    const buttonColor = selectedTabIndex === index ? \"tabs-button\" : \"\";\r\n    return  `text-left text-lg p-1 ${buttonColor}` \r\n}\r\n\r\nfunction TabsList({tabsContent, selectedTab, onClick}){\r\n    return (\r\n        <div className=\"pr-4 flex sm:flex-col\">\r\n            {tabsContent.map((content, index) => { \r\n                return (\r\n                    <button \r\n                        className={buttonStyle(selectedTab, index)} \r\n                        onClick={() => {onClick(index)}}>\r\n                        {content.name}\r\n                    </button>\r\n                    )\r\n                }\r\n            )\r\n            \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n/**\r\n * tabsContent: {\r\n *      name: string\r\n *      contents: string []\r\n * }\r\n */\r\nexport function Tabs({tabsContent}) {\r\n    const [selectedTab, setSelectedTab] = React.useState(0);\r\n    const workDateStr = tabsContent[selectedTab].endDate ? \r\n        `${tabsContent[selectedTab].startDate} to ${tabsContent[selectedTab].endDate}` :\r\n        `${tabsContent[selectedTab].startDate} to present`\r\n    return(\r\n        <div className=\"flex sm:flex-row flex-col w-full py-2\">\r\n            <TabsList \r\n                tabsContent={tabsContent}\r\n                onClick={(tabIndex) => setSelectedTab(tabIndex)}\r\n                selectedTab={selectedTab}\r\n            />\r\n            <div>\r\n                <h1 className=\"text-2xl font-medium\">\r\n                    {`${tabsContent[selectedTab].role} `}\r\n                    <span className=\"font-semibold\">\r\n                     {`@ ${tabsContent[selectedTab].name}`}\r\n                    </span>\r\n                </h1>\r\n                <div>\r\n                    {workDateStr}\r\n                </div>\r\n                <ul className=\"flex flex-col pl-4 pt-4\">\r\n                    {tabsContent[selectedTab].contents.map((content) => {\r\n                        return (\r\n                            <li className=\"list-disc text-left\">\r\n                                {content}\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/profile-274385f56477b5e5b4b642b6169f1d98.png\";","import * as React from 'react';\nimport './index.css'\nimport { PageTemplate } from '../components/PageTemplate';\nimport SvgIcon from '@mui/material/SvgIcon';\nimport CodeIcon from '@mui/icons-material/Code';\nimport JavascriptIcon from '@mui/icons-material/Javascript';\nimport StorageIcon from '@mui/icons-material/Storage';\nimport {StaticImage} from 'gatsby-plugin-image';\nimport Profile from \"../images/profile.png\";\n\nconst About = () => {\n    return (\n            <div style={{\n                \"background\": \"2596be\"\n            }} className=\"p-8 text-left flex flex-col justify-center items-center\">\n                <div className=\"flex p-4 sm:flex-row flex-col items-center justify-center\">\n                    <img className=\"m-4 profile-picture\" src={Profile} alt=\"wee\"/>\n                    <div className=\"p-4 sm:w-1/2 d\">\n                        <h1 className=\"text-3xl\">But who am I?</h1>\n                        <p className=\"pt-4\">\n                            Hi there! My name is Henry Truong. I'm a software engineer who enjoys working\n                            code that focuses on creating experiences and improvings the lives of users.\n                        </p>\n                        <p className=\"mt-2\">\n                            These days, I am focused on web development. Striving to make a\n                            <span className=\"font-bold\"> positive impact</span>  on people's \n                            lives and the <span className=\"font-bold\">limitless learning opportunities</span>  is what drives me.\n                        </p>\n                    </div>\n                </div>\n            </div>\n    )\n}   \n\nexport default About\n","import * as React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport { PageTemplate } from './../components/PageTemplate';\nimport { BlogCard } from '../components/Card';\n\nconst Blog = ({data}) => {\n  \n  const {allMdx: {\n    nodes\n    }\n  } = data;\n  console.log(nodes)\n  return (\n    <PageTemplate>\n    <title>Blog</title>\n    <div className=\"flex flex-col items-center p-4 w-full\">\n      <h1 className=\"text-4xl text-white\">Blog Posts</h1>\n      <p className=\"p-4 text-center\">Here you can find an archive of my blog posts.</p>\n      <ul className=\"flex flex-wrap sm:flex-row flex-col \">\n      {\n        nodes.map(node => (\n          <li className=\"p-2\" key={node.id}>\n            <Link to={`/blog/${node.slug}`}>\n              <BlogCard description={node.frontmatter.description} title={node.frontmatter.title} date={node.frontmatter.date}/>\n            </Link>\n          </li>\n        ))\n      }\n      </ul>\n      </div>\n    </PageTemplate>\n\n  )\n}\n\nexport const query = graphql`\n  query BlogQuery {\n    allMdx(sort: {fields: frontmatter___date, order: DESC}) {\n      nodes {\n        frontmatter {\n          date(formatString: \"MMMM D, YYYY\")\n          title\n          description\n        }\n        id\n        slug\n      }\n    }\n  }\n`\n\n\nexport default Blog\n","import * as React from 'react';\r\nimport { Tabs } from '../components/Tabs/Tabs';\r\nimport './index.css'\r\n\r\n\r\nconst workExperiences = [\r\n    {\r\n        \"name\": \"Intuit\",\r\n        \"role\": \"Software Developer Co-op\",\r\n        \"startDate\": \"Jan 2018\",\r\n        \"endDate\": \"Aug 2018\",\r\n        \"contents\": [\r\n            \"Front-end developer for Quickbooks Online\",\r\n            \"Ran spikes on new charting libraries to improve widget loading speed\",\r\n            \"Develop brand new UI for onboarding steps to help classify user business types\",\r\n            \"Improve code quality by writing new unit tests and end-to-end tests\",\r\n            \"Utilized JavaScript, Reactjs\"\r\n        ]\r\n    },\r\n    {\r\n        \"name\": \"Showbie\",\r\n        \"role\": \"Fullstack Developer\",\r\n        \"startDate\": \"June 2019\",\r\n        \"endDate\": \"Aug 2022\",\r\n        \"contents\": [\r\n            \"Fullstack Developer for Socrative\",\r\n            \"Develop scalable and performant back-end APIs for front-end consumption\",\r\n            \"Kick-started code quality improvement by introducing unit testing to the codebase\",\r\n            \"Build new email modal for teachers to send personalized PDF results to students\",\r\n            \"Assist with technical planning for features\",\r\n            \"Conduct code reviews to ensure quality and standards\",\r\n            \"Utilized TypeScript, Reactjs, Nodejs, express, Objectionjs\"\r\n        ]\r\n    }\r\n]\r\n\r\n\r\nexport default function Experience() {\r\n    return(\r\n        <div className=\"px-8 h-screen\">\r\n            <h1 className=\"text-3xl\">Places I've Worked</h1>\r\n            <div className=\"sm:max-w-xl max-w-sm flex items-center justify-center\">\r\n                <Tabs tabsContent={workExperiences}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import {useEffect, useState, useRef} from 'react';\r\n\r\nexport const useIntersect = ({\r\n    root = null,\r\n    rootMargin,\r\n    threshold=0\r\n}) => {\r\n    const [entry, updateEntry] = useState({});\r\n    const [node, setNode] = useState(null)\r\n\r\n    const observer = useRef(null);\r\n\r\n    useEffect(() => {\r\n        console.log(observer, node)\r\n        if(observer && observer.current) {\r\n            observer.current.disconnect();\r\n        }\r\n\r\n        observer.current = new window.IntersectionObserver(\r\n            ([entry]) => updateEntry(entry),\r\n            {\r\n                root,\r\n                rootMargin,\r\n                threshold\r\n            }\r\n        )\r\n\r\n        const {current: currentObserver} = observer;\r\n        if(node) {\r\n            currentObserver.observe(node);\r\n        }\r\n\r\n        return () => currentObserver.disconnect();\r\n    }, [node, root, rootMargin, threshold])\r\n\r\n    return [setNode, entry];\r\n}\r\n","/* eslint-disable no-undefined,no-param-reassign,no-shadow */\n\n/**\n * Throttle execution of a function. Especially useful for rate limiting\n * execution of handlers on events like resize and scroll.\n *\n * @param {number} delay -                  A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher)\n *                                            are most useful.\n * @param {Function} callback -               A function to be executed after delay milliseconds. The `this` context and all arguments are passed through,\n *                                            as-is, to `callback` when the throttled-function is executed.\n * @param {object} [options] -              An object to configure options.\n * @param {boolean} [options.noTrailing] -   Optional, defaults to false. If noTrailing is true, callback will only execute every `delay` milliseconds\n *                                            while the throttled-function is being called. If noTrailing is false or unspecified, callback will be executed\n *                                            one final time after the last throttled-function call. (After the throttled-function has not been called for\n *                                            `delay` milliseconds, the internal counter is reset).\n * @param {boolean} [options.noLeading] -   Optional, defaults to false. If noLeading is false, the first throttled-function call will execute callback\n *                                            immediately. If noLeading is true, the first the callback execution will be skipped. It should be noted that\n *                                            callback will never executed if both noLeading = true and noTrailing = true.\n * @param {boolean} [options.debounceMode] - If `debounceMode` is true (at begin), schedule `clear` to execute after `delay` ms. If `debounceMode` is\n *                                            false (at end), schedule `callback` to execute after `delay` ms.\n *\n * @returns {Function} A new, throttled, function.\n */\nfunction throttle(delay, callback, options) {\n  var _ref = options || {},\n      _ref$noTrailing = _ref.noTrailing,\n      noTrailing = _ref$noTrailing === void 0 ? false : _ref$noTrailing,\n      _ref$noLeading = _ref.noLeading,\n      noLeading = _ref$noLeading === void 0 ? false : _ref$noLeading,\n      _ref$debounceMode = _ref.debounceMode,\n      debounceMode = _ref$debounceMode === void 0 ? undefined : _ref$debounceMode;\n  /*\n   * After wrapper has stopped being called, this timeout ensures that\n   * `callback` is executed at the proper times in `throttle` and `end`\n   * debounce modes.\n   */\n\n\n  var timeoutID;\n  var cancelled = false; // Keep track of the last time `callback` was executed.\n\n  var lastExec = 0; // Function to clear existing timeout\n\n  function clearExistingTimeout() {\n    if (timeoutID) {\n      clearTimeout(timeoutID);\n    }\n  } // Function to cancel next exec\n\n\n  function cancel(options) {\n    var _ref2 = options || {},\n        _ref2$upcomingOnly = _ref2.upcomingOnly,\n        upcomingOnly = _ref2$upcomingOnly === void 0 ? false : _ref2$upcomingOnly;\n\n    clearExistingTimeout();\n    cancelled = !upcomingOnly;\n  }\n  /*\n   * The `wrapper` function encapsulates all of the throttling / debouncing\n   * functionality and when executed will limit the rate at which `callback`\n   * is executed.\n   */\n\n\n  function wrapper() {\n    for (var _len = arguments.length, arguments_ = new Array(_len), _key = 0; _key < _len; _key++) {\n      arguments_[_key] = arguments[_key];\n    }\n\n    var self = this;\n    var elapsed = Date.now() - lastExec;\n\n    if (cancelled) {\n      return;\n    } // Execute `callback` and update the `lastExec` timestamp.\n\n\n    function exec() {\n      lastExec = Date.now();\n      callback.apply(self, arguments_);\n    }\n    /*\n     * If `debounceMode` is true (at begin) this is used to clear the flag\n     * to allow future `callback` executions.\n     */\n\n\n    function clear() {\n      timeoutID = undefined;\n    }\n\n    if (!noLeading && debounceMode && !timeoutID) {\n      /*\n       * Since `wrapper` is being called for the first time and\n       * `debounceMode` is true (at begin), execute `callback`\n       * and noLeading != true.\n       */\n      exec();\n    }\n\n    clearExistingTimeout();\n\n    if (debounceMode === undefined && elapsed > delay) {\n      if (noLeading) {\n        /*\n         * In throttle mode with noLeading, if `delay` time has\n         * been exceeded, update `lastExec` and schedule `callback`\n         * to execute after `delay` ms.\n         */\n        lastExec = Date.now();\n\n        if (!noTrailing) {\n          timeoutID = setTimeout(debounceMode ? clear : exec, delay);\n        }\n      } else {\n        /*\n         * In throttle mode without noLeading, if `delay` time has been exceeded, execute\n         * `callback`.\n         */\n        exec();\n      }\n    } else if (noTrailing !== true) {\n      /*\n       * In trailing throttle mode, since `delay` time has not been\n       * exceeded, schedule `callback` to execute `delay` ms after most\n       * recent execution.\n       *\n       * If `debounceMode` is true (at begin), schedule `clear` to execute\n       * after `delay` ms.\n       *\n       * If `debounceMode` is false (at end), schedule `callback` to\n       * execute after `delay` ms.\n       */\n      timeoutID = setTimeout(debounceMode ? clear : exec, debounceMode === undefined ? delay - elapsed : delay);\n    }\n  }\n\n  wrapper.cancel = cancel; // Return the wrapper function.\n\n  return wrapper;\n}\n/* eslint-disable no-undefined */\n\n/**\n * Debounce execution of a function. Debouncing, unlike throttling,\n * guarantees that a function is only executed a single time, either at the\n * very beginning of a series of calls, or at the very end.\n *\n * @param {number} delay -               A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.\n * @param {Function} callback -          A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,\n *                                        to `callback` when the debounced-function is executed.\n * @param {object} [options] -           An object to configure options.\n * @param {boolean} [options.atBegin] -  Optional, defaults to false. If atBegin is false or unspecified, callback will only be executed `delay` milliseconds\n *                                        after the last debounced-function call. If atBegin is true, callback will be executed only at the first debounced-function call.\n *                                        (After the throttled-function has not been called for `delay` milliseconds, the internal counter is reset).\n *\n * @returns {Function} A new, debounced function.\n */\n\n\nfunction debounce(delay, callback, options) {\n  var _ref = options || {},\n      _ref$atBegin = _ref.atBegin,\n      atBegin = _ref$atBegin === void 0 ? false : _ref$atBegin;\n\n  return throttle(delay, callback, {\n    debounceMode: atBegin !== false\n  });\n}\n\nexport { debounce, throttle };","import * as React from \"react\"\nimport './index.css'\n\nimport Background from '../components/Background';\nimport { PageTemplate } from './../components/PageTemplate';\nimport { BlogCard } from '../components/Card';\nimport { graphql, Link } from 'gatsby'\nimport { IconButton } from '../components/IconButton';\nimport InstagramIcon from '@mui/icons-material/Instagram';\nimport LinkedInIcon from '@mui/icons-material/LinkedIn';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport About from './about';\nimport LandingPage from './landingpage';\nimport Blog from './blog';\nimport {debounce, throttle} from 'throttle-debounce';\nimport {useIntersect} from '../hooks/useIntersect';\nimport Experience from \"./experience\";\n\nfunction HeartBeat() {\n  return (\n      <div class=\"heart-rate\">\n        <svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\" \n           x=\"0px\" y=\"0px\" \n          width=\"150px\" height=\"73px\" viewBox=\"0 0 150 73\" \n          enable-background=\"new 0 0 150 73\" \n          >\n          <polyline fill=\"none\" stroke=\"#009B9E\" stroke-width=\"3\" \n            stroke-miterlimit=\"10\" points=\"0,45.486 38.514,45.486 44.595,33.324 50.676,45.486 57.771,45.486 62.838,55.622 71.959,9 80.067,63.729 84.122,45.486 97.297,45.486 103.379,40.419 110.473,45.486 150,45.486\"\n          />\n        </svg>\n      <div class=\"fade-in\"/>\n      <div class=\"fade-out\"/>\n    </div>\n  )\n}\n\n\nconst throttledOnScroll = debounce(250, (callback) => {callback()},\n {\n  atBegin: true\n  //  noTrailing: true\n  //  debounceMode: true\n }\n);\n\nlet prevScrollPos = 0;\nlet index = 0;\nlet st = 0;\n\n// const useRefCallback = (node) => {\n//   const ref = React.useRef({});\n\n//   const setRefCallback = React.useCallback((node) => {\n//     if(node) {\n//       console.log(node);\n//       // setRef({\n//       //   ...ref,\n//       //   current: node\n//       // })\n//     }\n\n//     ref = node;\n//   })\n\n//   return [setRefCallback, ref]\n// }\n\nconst IndexPage = ({ data}) => {\n    // const [index, setIndex] = React.useState(0); //start at the index\n    // const [st, setCurrentScrollPos] = React.useState(window.pageYOffset);\n    const indexRef = React.useRef();\n    const blogRef = React.useRef();\n    const aboutRef = React.useRef();\n    const [bottomReached, setBottomReached] = React.useState(false);\n\n    // const [setIndexRef, indexRef] = useRefCallback();\n    // const [setAboutRef, aboutRef] = useRefCallback();\n    // const [setBlogRef, blogRef] = useRefCallback();\n    const refs = [indexRef, aboutRef, blogRef];\n\n  // console.log(refs)\n    const scrollToNextSection = (sectRef) => {\n        if(sectRef && sectRef.current) {\n          sectRef.current.scrollIntoView({\n            behaviour: \"smooth\"\n          });\n        }\n      }\n\n  \n    // React.useEffect(() => {\n    //   const onScrollCallback = (event) => {\n    //     throttledOnScroll(()=>{\n    //       let newIndex;\n    //       const st = window.pageYOffset || document.documentElement.scrollTop\n          \n    //       if(st > prevScrollPos) {\n    //         newIndex = index + 1 >= refs.length - 1 ? 2 : index + 1;\n    //       } else {\n    //         newIndex = index - 1 < 0 ? 0 : index - 1;\n    //       }\n    //       console.log(st, prevScrollPos, newIndex, bottomReached);\n\n    //       scrollToNextSection(refs[newIndex]);\n    //       prevScrollPos = st;\n    //       index = newIndex;\n    //       if(newIndex === 2) {\n    //         setBottomReached(true);\n    //       } else {\n    //         setBottomReached(false);\n    //       }\n    //     }); \n    //   } \n    //   document.addEventListener('scroll', onScrollCallback);\n\n    //   return () => {setTimeout(() => {\n    //     document.removeEventListener('scroll', onScrollCallback);\n    //   }, 0)}\n    // }, [bottomReached]);\n\n\n    const {allMdx: {\n        nodes\n        }\n      } = data;\n      // console.log(refs[0])\n  return (\n  (       <PageTemplate className=\"flex flex-col items-center justify-center sm:px-8\">\n            <div ref={indexRef} \n                 className=\"flex md:flex-row flex-col-reverse sm:flex-col justify-center items-center px-8 h-screen\"\n            >\n              <div className=\"text-white p-4 w-3/4 text-leftc fade-in-text\">\n                <h1 className=\"text-white text-6xl font-thin pb-4 font-bold\">Hi There</h1>\n                <p className=\"text-2xl\">\n                I'm an aspiring <span className='font-bold'>JavaScript</span> software engineer whose \n                focused on <span className='font-bold'>web development </span>.\n                </p>\n                <br/>\n                <p className=\"text-2xl\">\n                  I am always on the look out for great food and my next adventures.\n                </p>\n              </div>\n            </div>\n            <div id=\"about\" ref={aboutRef} className=\"h-screen\">\n              <About/>\n            </div>\n            <Experience/>\n            {/* <div id=\"experience\">\n              \n            </div> */}\n            {/* <div id=\"blog\" ref={blogRef} className=\"h-screen\">\n              <h1 className=\"text-white text-4xl font-thin text-center\">What's New</h1>\n              <div className=\"p-4 items-center mt-4 rounded-xl flex-col flex sm:flex-row w-fit\"> */}\n                {/* {\n                nodes.map(node => (\n                <li className=\"py-2 sm:px-1 list-none w-fit\" key={node.id}>\n                    <Link className=\"no-underline text-black\" to={`/blog/${node.slug}`}>\n                    <BlogCard description={node.frontmatter.description} title={node.frontmatter.title} date={node.frontmatter.date}/>\n                    </Link>\n                </li>\n                ))\n            } */}\n            {/* </div> */}\n          {/* </div> */}\n      </PageTemplate>)\n    \n  )\n}\n\nexport const query = graphql`\n  query IndexQuery {\n    allMdx(limit:3 ,sort: {fields: frontmatter___date, order: DESC}) {\n      nodes {\n        frontmatter {\n          date(formatString: \"MMMM D, YYYY\")\n          title\n          description\n        }\n        id\n        slug\n      }\n    }\n  }\n`\n\nexport default IndexPage\n","import * as React from 'react';\r\nimport { BlogCard } from '../components/Card';\r\nimport { graphql, Link } from 'gatsby'\r\n\r\nconst LandingPage = (props) => {\r\n    console.log(props)\r\n    // const {allMdx: {\r\n    //     nodes\r\n    //     }\r\n    //   } = data;\r\n\r\n    return(\r\n        <>\r\n            <div className=\"flex md:flex-row flex-col-reverse sm:flex-col justify-center items-center p-8\">\r\n                <div className=\"text-white text-center p-4 w-3/4\">\r\n                    <h1 className=\"text-white text-6xl font-thin pb-4 text-center\">Hi There</h1>\r\n                    <p style={{animationDelay: \"300ms\"}} className=\"text-2xl\">\r\n                    My name is <span className=\"font-bold\">Henry Truong</span>.\r\n                    <br/>\r\n                    I'm a <span className='font-bold'>full stack</span> software engineer whose always on the look out for\r\n                    great food.\r\n                    </p>\r\n                </div>\r\n                </div>\r\n                <div className=\"py-8 flex justify-center flex-col items-center max-w-full\">\r\n                <h1 className=\"text-white text-4xl font-thin text-center\">What's New</h1>\r\n                <div className=\"p-4 items-center mt-4 rounded-xl flex-col flex sm:flex-row w-fit\">\r\n                    {/* {\r\n                    nodes.map(node => (\r\n                    <li className=\"py-2 sm:px-1 list-none w-fit\" key={node.id}>\r\n                        <Link className=\"no-underline text-black\" to={`/blog/${node.slug}`}>\r\n                        <BlogCard description={node.frontmatter.description} title={node.frontmatter.title} date={node.frontmatter.date}/>\r\n                        </Link>\r\n                    </li>\r\n                    ))\r\n                } */}\r\n                </div>\r\n            </div>\r\n        </>\r\n        )\r\n}\r\n\r\nexport const query = graphql`\r\n  query LandingPageQuery {\r\n    allMdx(limit:3 ,sort: {fields: frontmatter___date, order: DESC}) {\r\n      nodes {\r\n        frontmatter {\r\n          date(formatString: \"MMMM D, YYYY\")\r\n          title\r\n          description\r\n        }\r\n        id\r\n        slug\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default LandingPage\r\n"],"names":["buttonStyle","selectedTabIndex","index","TabsList","tabsContent","selectedTab","onClick","className","map","content","name","Tabs","React","setSelectedTab","workDateStr","endDate","startDate","tabIndex","role","contents","style","src","Profile","alt","nodes","data","allMdx","console","log","P","node","key","id","to","slug","description","frontmatter","title","date","workExperiences","Experience","_ref$atBegin","atBegin","delay","callback","options","timeoutID","_ref","_ref$noTrailing","noTrailing","_ref$noLeading","noLeading","_ref$debounceMode","debounceMode","undefined","cancelled","lastExec","clearExistingTimeout","clearTimeout","wrapper","_len","arguments","length","arguments_","Array","_key","self","this","elapsed","Date","now","exec","apply","clear","setTimeout","cancel","_ref2$upcomingOnly","upcomingOnly","throttle","indexRef","aboutRef","PageTemplate","ref","props","animationDelay"],"sourceRoot":""}